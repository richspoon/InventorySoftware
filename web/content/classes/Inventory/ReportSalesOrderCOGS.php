<?phpclass Inventory_ReportSalesOrderCOGS extends Inventory_InventoryBase{    public $Show_Query                  = false;            public function  __construct()    {        parent::__construct();        $this->Classname = get_class($this);                $this->ClassInfo = array(            'Created By'    => 'Richard Witherspoon',            'Created Date'  => '2012-12-02',            'Updated By'    => 'Richard Witherspoon',            'Updated Date'  => '2012-12-10',            'Filename'      => 'Inventory_InventoryReportSalesOrderCOGS',            'Version'       => '1.0',            'Description'   => 'Get the cost of goods sold for given sales orders',            'Update Log'    => array(                '2012-12-02_001'    => "Module Created",                '2012-12-10_001'    => "Renamed from InventoryReportCOGS to ReportSalesOrderCOGS",            ),        );            } // -------------- END __construct --------------        public function Execute()    {        //$_GET['sales_order_list'] = "666, 1256";                AddStylesheet("/css/inventory.css??20121108-1");                // ----- Javascript for TABS        AddScriptOnReady('            var tabs = $( "#tabs" ).tabs();            tabs.find( ".ui-tabs-nav" ).sortable({                axis: "x",                stop: function() {                    tabs.tabs( "refresh" );                }            });        ');                echo "This report returns the cost of goods sold for any given sales order.        <br /><br />";                $this->OutputForm();        $so_array   = $this->GetSalesOrders();        $output     = $this->CreateTableFromArray($so_array);                echo "<br /><br />" . $output;    }        public function ExecuteAjax()    {        $QDATA = GetEncryptQuery('eq');        $action = Get('action');        $return = 0;                switch ($action) {                        case 'closedsalesorders':                            // ----- get all sales order numbers                $records = $this->SQL->GetArrayAll(array(                    'table' => "inventory_sales_orders",                    'keys'  => "so_number",                    'where' => "active=1",                    'order' => "date ASC",                ));                $this->EchoQuery();                                if ($records) {                    // ----- check status of each sales order                    foreach ($records AS $record) {                        $so_number  = $record['so_number'];                        $status     = $this->StatusSalesOrder($so_number);                                                if ($status == 'closed') {                            $return .= ", {$so_number}";                        }                    }                }            break;                        case 'opensalesorders':                            // ----- get all sales order numbers                $records = $this->SQL->GetArrayAll(array(                    'table' => "inventory_sales_orders",                    'keys'  => "so_number",                    'where' => "active=1",                    'order' => "date ASC",                ));                $this->EchoQuery();                                if ($records) {                    // ----- check status of each sales order                    foreach ($records AS $record) {                        $so_number  = $record['so_number'];                        $status     = $this->StatusSalesOrder($so_number);                        if ($status != 'closed') {                            $return .= ", {$so_number}";                        }                    }                }            break;        }                echo $return;    }        public function OutputForm()    {        $onclick 	        = ''; //"submitSalesOrderNumbers('sales_order_list')";        $btn_submit         = MakeButton('positive', 'Submit Sales Orders', '', '', 'btn_barcode_1', $onclick, 'submit', 'btn_barcode_1');                $onclick 	        = "getClosedSalesOrders('sales_order_list')";        $btn_closed         = MakeButton('positive', 'Get All CLOSED Orders', '', '', 'btn_barcode_2', $onclick, 'button', 'btn_barcode_2');                $onclick 	        = "getOpenSalesOrders('sales_order_list')";        $btn_open           = MakeButton('positive', 'Get All OPEN Orders', '', '', 'btn_barcode_3', $onclick, 'button', 'btn_barcode_3');                        // ----- output the form        // ---- repopulate the form        //$link = $this->getPageURL();        $link   = Server('SCRIPT_URI');        $value  = Post('sales_order_list');        $output = '        <form action="'.$link.'" method="post" accept-charset="utf-8" id="db_edit_form" name="db_edit_form">        <div class="shadow" style="border:1px dashed blue; padding:5px; background-color:#efefef;">            <br class="formtitlebreak"><div class="formtitle">Sales Orders:</div>            <div class="forminfo">                Seperate each sales order number with a comma!                <br />                <input autocomplete="off" alt="Search" id="sales_order_list" class="formitem ui-autocomplete-input" name="sales_order_list" size="60" maxlength="255" value="'.$value.'" type="text"><span class="ui-helper-hidden-accessible" aria-live="polite" role="status"></span>                <br /><br />                <div>                                <table>                <tr>                <td valign="top" width="100%">'.$btn_submit.'</td>                <td valign="top">'.$btn_open.'<br />'.$btn_closed.'</td>                </tr>                </table>                                </div>                <div style="clear:both;"></div>            </div>        </div>        </form>';        echo $output;                                // ----- javascript for submitting the form        //$link = $this->getPageURL();        $CLASS_EXECUTE_LINK_AJAX    = '/office/AJAX/class_execute';        $eq                         = EncryptQuery("class={$this->Classname};");        $link                       = $CLASS_EXECUTE_LINK_AJAX . '?eq=' . $eq;                $script = <<<SCRIPT            function getOpenSalesOrders(returnID)            {                // CALL THIS CLASS VIA AJAX TO GET BARCODE                $.get( '{$link};action=opensalesorders', '', function(data){                    $('#' + returnID).val(data);                });            }                        function getClosedSalesOrders(returnID)            {                // CALL THIS CLASS VIA AJAX TO GET BARCODE                $.get( '{$link};action=closedsalesorders', '', function(data){                    $('#' + returnID).val(data);                });            }SCRIPT;        AddScript($script);            }        public function GetSalesOrders()    {        $so_array       = array();    // ----- will hold all the sales orders and its barcodes        $so_list        = Post('sales_order_list');                if ($so_list) {            $sales_orders   = explode(',', $so_list);                        // ----- loop through each SO and get the barcodes for it            foreach ($sales_orders AS $sales_order) {                                $sales_order = trim($sales_order);                                if ($sales_order) {                    $this->Sales_Order_Count++;                    $so_array[] = $sales_order;                }            }        }                return $so_array;    }        public function CreateTableFromArray($SO_ARR)    {        $output             = '';        $total_last_cost    = 0;                if ($SO_ARR) {                        $tab_tabs       = '';            $tab_content    = '';            $tab_count      = 0;                        foreach ($SO_ARR as $id => $so_number) {                                $obj = new Inventory_InventorySalesOrderCalculateCOGS();                $obj->SO_Number = $so_number;                $output = $obj->Execute(true);                                $tab_count++;                $tab_tabs       .= "<li><a href='#tabs-{$tab_count}'>{$so_number}</a></li>";                $tab_content    .= "<div id='tabs-{$tab_count}'>{$output}</div>";            }                                    $output = "                <div id='tabs'>                    <ul>                        {$tab_tabs}                    </ul>                    {$tab_content}                </div>";                                } else {            $output = "<center><h2>NO SALES ORDERS SUBMITTED</h2></center>";        } // end if                return $output;    }        }  // -------------- END CLASS --------------
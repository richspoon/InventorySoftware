<?phpclass Inventory_Valuation_ValueSummaryReport extends Inventory_InventoryBase{    public $Show_Query                  = false;            // ----- INPUT VARIABLES -----    public $Value_Array                 = array();      // array we are converting to a table            // ----- OUTPUT VARIABLES -----    public $Sumary_Table                = "";           // will hold the final summary table            // ----- OTHER VARIABLES -----                    public function  __construct()    {        parent::__construct();                $this->Classname = get_class($this);        $this->ClassInfo = array(            'Created By'    => 'Richard Witherspoon',            'Created Date'  => '2013-02-28',            'Updated By'    => '',            'Updated Date'  => '',            'Filename'      => $this->Classname,            'Version'       => '1.0',            'Description'   => 'Create a summary table of how value was calculated',            'Update Log'    => array(                '2013-02-28_1.0'    => "Module Created",            ),        );            } // -------------- END __construct --------------            public function Pseudocode()    {        # FUNCTION :: Pseudocode for this class. Returned here as a variable so it can be dumped to the screen for review.                $output = "        ==========================================================================        [$this->Classname :: Pseudocode()]        ==========================================================================                        [DESCRIPTION:]        Create a summary report table of how value was caluclated. This report can be output on any page to show the user        how the value was calculated.                        [NOTES]:        Value = money value of an inventory item prior to it being sold        COGS = money value of inventory item at time of sale. COGS can be a summation of all values making up an inventory item.        ";                $output = $this->PseudocodeFormat($output);        return $output;    }            public function Execute()    {        if (!is_array($this->Value_Array))   {            $error = "Missing Value_Array";            $this->AddError($this->Classname, __FUNCTION__, $error);            $this->EchoError($this->Classname, __FUNCTION__, $error, true);            exit();        }                        // ----- call the function to process report array        $report = $this->CreateReport();        return $report;    }        public function ArrayToTable($ARR)    {        $row_1 = "";        $row_2 = "";                foreach ($ARR as $key => $val) {                        if (is_array($val)) {                $val = $this->ArrayToTable($val);            }                        $row_1 .= "<th>{$key}</th>";            $row_2 .= "<td>{$val}</td>";        }                $output = "            <table class='vr_assy_table' width='100%'>            <tr>{$row_1}</tr>            <tr>{$row_2}</tr>            </table>            ";                return $output;    }        public function CreateReport()    {        # FUNCTION :: Actually make the summary table report                //foreach ($this->Value_Array)                $this->JavascriptToggleFunctionality();                                             // toggling show/hide a div area                                $record = $this->Value_Array;                        $value_each         = money_format("%n", $record['value_each']);        $value_total        = money_format("%n", $record['value_total']);        $method_details     = ArrayToStr($record['method_details']);                $method_table = '            <div class="form_section_header">Method Details <a class="toggle" href="#" id="menu_group_1"><span class="updown">&nbsp;</span></a></div>                <div class="menu_group" style="display:none;" id="div_menu_group_1">                '.$method_details.'                </div>            </div>';                $output = "        <div style='width:300px;'>        <div class=\"form_section_header\">Value Report <a class=\"toggle\" href=\"#\" id=\"menu_group_A\"><span class=\"updown\">&nbsp;</span></a></div>            <div class=\"menu_group\" style=\"display:none;\" id=\"div_menu_group_A\">            <table class='vr_assy_table' width='100%'>            <tr>                <th>Product</th>                <th>Value</th>                <th>Class</th>                <th>Method</th>            </tr>            <tr>                <td><b>{$record['barcode']}<br />{$record['sku']}</b></td>                <td>{$value_each} X {$record['quantity']} = {$value_total}</td>                <td>{$record['class']}</td>                <td><b>{$record['method']}</b></td>            </tr>            <tr>                <td colspan='6'>{$method_table}</td>            </tr>            </table>            </div>        </div>        </div>        ";                                // ----- add styles -----        AddStylesheet("/css/inventory.css");        AddStyle("            .vr_header {                font-size:          22px;                font-weight:        bold;                color:              #003399;            }            .vr_header_barcode {                font-size:          16px;                font-weight:        bold;                color:              #003399;            }                        .vr_table td:first-child {                font-weight:        bold;                text-align:         right;            }                        .vr_assy_table {                border:             1px solid blue;                border-collapse:    collapse;                            }            .vr_assy_table th {                border:             1px solid black;                font-weight:        bold;                background-color:   #C2D1F0;                padding:            3px;            }            .vr_assy_table td {                border:             1px solid black;                padding:            3px;            }        ");                                return $output;    }                }  // -------------- END CLASS --------------
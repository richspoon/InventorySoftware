<?phpclass Inventory_PrintDocument extends Inventory_InventoryBase{    public $Module_Offline              = false;                    // (false) TRUE = dispaly offline message to users    public $Show_Query                                  = false;    // (false) TRUE = display database queries used in this class            // ----- INPUT VARIABLES -----    public $Template_File           = "";               // template file to use    public $Filename                = "";               // filename for saving    public $Swap_Array              = array();          // hold the key => value swaps for the template        // ----- OUTPUT VARIABLES -----	    // ----- OTHER VARIABLES -----    public $Template_Path           = "";               // path of template files    public $Output_Path             = "";               // path to save files to                public function  __construct()    {        parent::__construct();        $this->SetSQLInventory();   // set the database connection to the inventory database                $this->Classname = get_class($this);        $this->ClassInfo = array(            'Created By'    => 'Richard Witherspoon',            'Created Date'  => '2013-08-01',            'Updated By'    => '',            'Updated Date'  => '',            'Filename'      => $this->Classname,            'Version'       => '1.0.0',            'Description'   => 'Create a document for export/print',            'Update Log'    => array(                '2013-08-01_1.0.0'    => "Module Created",            ),        );                                $this->Template_Path            = $this->GetSetting('template_path_templates');        $this->Output_Path              = $this->GetSetting('template_path_output');                        // ----- Process any parameters sent in construct        //$this->SetParameters(func_get_args());        //$this->Inventory_Production_Board_Whitesheet_Id = $this->GetParameter(0);        //$this->Inventory_Production_Board_Id            = $this->GetParameter(1);                    } // -------------- END __construct --------------    public function Execute()    {        # FUNCTION :: Main function called after instantiating this class                global $ROOT;                $this->ModuleOfflineMessage();      // show module offline essage - if activated        $this->CheckForErrors();            // check for any errors                        // ----- initialize objects and variables        $OBJ_PHPWord        = new PHPWord_PHPWord();        $document           = $OBJ_PHPWord->loadTemplate($ROOT . $this->Template_Path . $this->Template_File);        $fileid             = date("YmdHis");        $filename           = "{$this->Filename}_{$fileid}.docx";                if (!$document) {            echo "ERROR :: Document Not Found :: {$this->Template_File}";        } else {                                    /*            $cnt = count($this->Swap_Array['order_lines']);            $this->EchoVar('cnt', $cnt);            $document->cloneRow('order_line_description', $cnt);                                    foreach ($this->Swap_Array['order_lines'] AS $id => $line) {                $idx = $id + 1;                $document->setValue("order_line_description#{$idx}", $line['order_line_description']);                $document->setValue("order_line_qty#{$idx}",         $line['order_line_qty']);                $document->setValue("order_line_price#{$idx}",       $line['order_line_price']);            }            */                                    //$tbl = $this->Swap_Array['order_lines_table'];            //$document->setValue('order_lines_table', $tbl);                                    //$document->setValue('first_name#1', 'Rejaul');            //$document->setValue('last_name#1', 'Karim');                                                // ----- swap in all the values            foreach ($this->Swap_Array AS $key => $value) {                //if ($key != 'order_lines') {                    $document->setValue($key, $value);                //}            }                                                // ----- save the document            $document->save($ROOT . $this->Output_Path . $filename);                                    if (false) {                echo "                </br></br>                <div style='border:5px solid blue; padding:10px; margin:20px;'>                </br>template_file ===> {$this->Template_File}                </br>_documentXML ===> {$document->_documentXML}                 </div>";            }                        echo "                        <div style='border:5px solid blue; padding:10px; margin:20px;'>            File Saved: {$filename}            </br></br>            <div style='font-size:16px;'>            <a href='http://webmanager.whhub.com{$this->Output_Path}{$filename}' target='_file'>Download File</a>            </div>            </div>            ";        }    }        private function CheckForErrors()    {        if (!$this->Template_Path) {            $error = "Missing Template_Path";            $this->AddError($this->Classname, __FUNCTION__, $error);            $this->EchoError($this->Classname, __FUNCTION__, $error, true);            exit();        }                if (!$this->Output_Path) {            $error = "Missing Output_Path";            $this->AddError($this->Classname, __FUNCTION__, $error);            $this->EchoError($this->Classname, __FUNCTION__, $error, true);            exit();        }                if (!$this->Template_File) {            $error = "Missing Template_File";            $this->AddError($this->Classname, __FUNCTION__, $error);            $this->EchoError($this->Classname, __FUNCTION__, $error, true);            exit();        }                if (!$this->Swap_Array) {            $error = "Missing Swap_Array";            $this->AddError($this->Classname, __FUNCTION__, $error);            $this->EchoError($this->Classname, __FUNCTION__, $error, true);            exit();        }                if (!$this->Filename) {            $error = "Missing Swap_Array";            $this->AddError($this->Classname, __FUNCTION__, $error);            $this->EchoError($this->Classname, __FUNCTION__, $error, true);            exit();        }    }        }  // -------------- END CLASS --------------
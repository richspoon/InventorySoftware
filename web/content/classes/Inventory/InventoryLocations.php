<?phpclass Inventory_InventoryLocations extends Inventory_InventoryBase{        // ----- EDITABLE VARIABLES -----    public $Show_Query                  = false;                        // (false) TRUE = show the database queries    public $Module_Offline              = false;                        // (false) TRUE = dispaly offline message to users    public $Header_Row                  = "Barcode|APDM SKU|Description|QTY|Price (ea)|Price (total)|DEL";      // Header row for quick-add table                public function  __construct()    {        parent::__construct();        $this->SetSQLInventory();   // set the database connection to the inventory database        		$this->Classname = get_class($this);        $this->ClassInfo = array(            'Created By'    => 'Richard Witherspoon',            'Created Date'  => '2013-07-16',            'Updated By'    => '',            'Updated Date'  => '',            'Filename'      => $this->Classname,            'Version'       => '1.0.0',            'Description'   => 'Manage locations for inventory',            'Update Log'    => Array(                '2013-07-16_1.0.0'  => "Module Created",            ),        );                        /// ===== GET VALUES PASSED INTO CLASS CONSTRUCT =====        $this->SetParameters(func_get_args());        //$this->Pipeline_Status          = $this->GetParameter(0);                                $this->Table                = 'inventory_locations';        $this->Index_Name           = 'inventory_locations_id';        $this->Default_Sort         = '';      // field for default table sort                        $this->Field_Titles = array(            "{$this->Table}.inventory_locations_id"                 => 'Inventory Locations Id',            "{$this->Table}.location_name"                          => 'Name',            "{$this->Table}.notes"                                  => 'Notes',                        '' => '|',            "{$this->Table}.active"                                 => 'Active',            "{$this->Table}.updated"                                => 'Updated',            "{$this->Table}.created"                                => 'Created',        );                        $this->Join_Array           = Array();        $this->Default_Fields       = 'inventory_locations_id, location_name, notes';        $this->Unique_Fields        = '';        $this->Default_Values       = array();        $this->Default_Where        = "";               // additional search conditions                $this->Add_Submit_Name      = "{$this->Table}_SUBMIT_ADD";        $this->Edit_Submit_Name     = "{$this->Table}_SUBMIT_EDIT";        $this->Flash_Field          = $this->Index_Name;                        $this->Edit_Links_Count     = '4';        $this->Use_Selection_Tab    = true;        // false = hide the search tab on the table        $this->Default_List_Size    = 100;          // how many records to show when table initially loads (higher = slower performance but better user experience)        $this->Close_On_Success     = true;         // (TRUE) true = after editing a recod - close the edit window                        // ----- GET SOME NEEDED SETTINGS -----        //$this->LoadClassSettings();        //$this->TableHeading_ShowTitle = false;                    } // -------------- END __construct --------------        public function Execute()    {        # FUNCTION :: Main function called after instantiating this class                $this->ModuleOfflineMessage();  // show module offline essage - if activated                $action = Get('action');        switch ($action) {            case 'add':                // ----- Adding a new record                $this->AddRecord();            break;                        case 'list':            default:                // ----- display list of all assemblies that can be built				$this->AddStyle();                $this->AddScript();                $this->ListTable();            break;                    }    }        public function ExecuteAjax()    {        # FUNCTION :: Function handles AJAXy calles to this class                $return     = 0;                            // initialize variable        $QDATA      = GetEncryptQuery('eq');        // decode the encrypted query passed in        $action     = Get('action');                // determine what action we're trying to do                                // ----- output debug variables to screen - this will probably kill the return values - but good for debug        //$_GET['show'] = true;        if (Get('show')) {            echo "<br />QDATA = " . ArrayToStr($QDATA);            echo "<br />action = $action";        }                                switch ($action) {            default:            break;        }                echo $return;    }                    private function AddScript()    {        # FUNCTION :: Add needed scripts for this class            }    public function AddStyle()    {        # FUNCTION :: Add needed styles for this class    }        public function SetFormArrays()    {        # FUNCTION :: Output the main user form to the screen                $this->AddScript();        $this->AddStyle();                $base_array = array(            "form|{$this->Action_Link}|post|db_edit_form",            'text|Location Name|location_name|N|60|255',            'textarea|Notes|notes|N|60|4',        );                if ($this->Action == 'ADD') {            $base_array[] = "submit|Add Record|$this->Add_Submit_Name";            $base_array[] = 'endform';            $this->Form_Data_Array_Add = $base_array;        } else {            //$base_array[] = 'checkbox|Active|active||1|0';            $base_array[] = "submit|Update Record|$this->Edit_Submit_Name";            $base_array[] = 'endform';            $this->Form_Data_Array_Edit = $base_array;        }    }    }  // -------------- END CLASS --------------